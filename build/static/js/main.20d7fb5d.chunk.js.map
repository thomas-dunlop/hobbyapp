{"version":3,"sources":["functions/getCookie.js","constants.js","components/Header.js","components/ProjectCard.js","components/RecipeAccordion.js","components/ProjectIcon.js","components/MaterialIcon.js","components/InventoryAccordionItem.js","components/InventoryCategoryAccordion.js","components/EditButton.js","components/DeleteButton.js","components/AddButton.js","components/csrftoken.js","components/NewProjectForm.js","components/NewRecipeForm.js","components/EditRecipeForm.js","components/EditProjectForm.js","components/NewStepForm.js","components/EditMaterialForm.js","components/NewMaterialForm.js","components/NewItemForm.js","components/LoginForm.js","components/CreateAccountForm.js","components/NewCategoryForm.js","pages/HomePage.js","pages/Recipes.js","pages/Inventory.js","pages/Login.js","pages/ProjectPage.js","pages/CreateAccount.js","App.js","reportWebVitals.js","index.js"],"names":["getCookie","name","cookieValue","console","log","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","URL","Header","useState","pageData","setPageData","loaded","setLoaded","csrftoken","useEffect","fetch","then","response","ok","json","data","catch","error","finally","Navbar","Container","fluid","Brand","href","Nav","Link","class","Collapse","className","Text","username","Button","onClick","event","method","headers","window","location","preventDefault","style","marginLeft","ProjectCard","props","deleteTarget","target","id","Card","height","Img","src","image","ImgOverlay","Title","Row","Col","DeleteButton","RecipeAccordion","newType","type","recipe","materialList","map","element","category","options","materials","material","item","generateOptGroups","status","rowKey","inEditMode","setInEditMode","orderValue","description","stepValues","setStepValues","onCancel","handleSelectChange","selectedOption","updateInventory","newValues","body","JSON","stringify","reload","editData","AccordionItem","eventKey","AccordionHeader","projects","project","ProjectIcon","xs","AccordionBody","steps","step","value","onChange","defaultValue","isMulti","classNamePrefix","MaterialIcon","Fragment","variant","onSave","currentValues","onEdit","currentMaterials","icon","faEdit","backgroundImage","backgroundRepeat","backgroundSize","border","marginRight","InventoryAccordionItem","lotNumber","expiryDate","itemValues","setItemValues","Badge","bg","inventory","partNumber","company","link","InventoryCategoryAccordion","Accordion","EditButton","form","show","setShow","EditProjectForm","EditRecipeForm","EditMaterialForm","Modal","onHide","closeButton","Body","url","faTrash","AddButton","width","size","NewProjectForm","NewRecipeForm","NewStepForm","NewItemForm","NewMaterialForm","NewCategoryForm","faPlusCircle","CSRFToken","notes","recipes","setValue","recipeList","handleChange","Form","onSubmit","Group","controlId","Label","Control","placeholder","as","projectList","currentProjects","currentRecipes","LoginForm","password","CreateAccountForm","email","HomePage","Recipes","directAdd","Inventory","Login","ProjectPage","setEditData","useParams","CreateAccount","App","rel","integrity","crossorigin","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.20d7fb5d.chunk.js","sourcesContent":["function getCookie(name) {\r\n    let cookieValue = null;\r\n    console.log(document.cookie)\r\n    if (document.cookie && document.cookie !== '') {\r\n        const cookies = document.cookie.split(';');\r\n        console.log(cookies)\r\n        for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\nexport default getCookie;","let production = true \r\nlet URL\r\nif (production === false){\r\n    URL = 'http://127.0.0.1:8000/'\r\n} else {\r\n    URL = 'https://hobby-project-tracker.herokuapp.com/'\r\n}\r\n\r\nexport default URL","import Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport getCookie from '../functions/getCookie';\r\nimport { useState, useEffect } from 'react';\r\nimport URL from '../constants';\r\n\r\nconst Header = () => {\r\n    const [pageData, setPageData] = useState(null);\r\n    const [loaded, setLoaded] = useState(false);\r\n    const csrftoken = getCookie('csrftoken');\r\n    const handleSubmit = (event) => {\r\n        fetch(URL + 'account/logout/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'X-CSRFTOKEN': csrftoken\r\n              },\r\n        })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response.json()\r\n            } \r\n        }).then(data => {\r\n            window.location.href = data[\"url\"]\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error adding project\", error)\r\n        })\r\n\r\n        event.preventDefault()\r\n    }\r\n\r\n    useEffect(() => {\r\n        //Replace with API variable\r\n        fetch(URL + 'data/userinfo')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response.json()\r\n            } \r\n        })\r\n        .then(data => {\r\n            setPageData(data)\r\n            setLoaded(true)\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error fetching data\", error)\r\n        })\r\n        .finally(() =>{\r\n            setLoaded(true)\r\n        })\r\n    }, [])\r\n\r\n    if(loaded === false){\r\n        return <p>Loading</p>\r\n    }\r\n\r\n    return (\r\n        <Navbar>\r\n            <Container fluid>\r\n                <Navbar.Brand href='/'>Hobby Planner</Navbar.Brand>\r\n                <Nav>\r\n                    <Nav.Link class ='navItems' href='/'>Home</Nav.Link>\r\n                    <Nav.Link class ='navItems' href='/Recipes'>Recipes</Nav.Link>\r\n                    <Nav.Link class ='navItems' href='/Inventory'>Inventory</Nav.Link>\r\n                </Nav>\r\n                <Navbar.Collapse className=\"justify-content-end\">\r\n                    <div>\r\n                        <Navbar.Text>\r\n                            Signed in as: {pageData.username}\r\n                        </Navbar.Text>\r\n                        <Button onClick={handleSubmit} style={{\r\n                            marginLeft: '5px',\r\n                        }}>Logout</Button>\r\n                    </div>\r\n                    \r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default Header;","import Card from 'react-bootstrap/Card';\r\nimport Container from 'react-bootstrap/esm/Container';\r\nimport Row from 'react-bootstrap/esm/Row';\r\nimport Col from 'react-bootstrap/esm/Col';\r\nimport { DeleteButton } from '.';\r\n\r\nconst ProjectCard = (props) => {\r\n    const deleteTarget = {target: 'project', id: props.id} \r\n    return (\r\n        <div>\r\n            <Card style={{height: 'auto'}}>\r\n                <Card.Img src={props.image}/>\r\n                <Card.ImgOverlay>\r\n                    <Card.Title>\r\n                        <Container>\r\n                            <Row>\r\n                                <Col>\r\n                                    <a href = {'/Projects/' + props.id} class = \"projectCardA\">{props.name}</a>\r\n                                </Col>\r\n                                <Col>\r\n                                    <div class=\"d-flex justify-content-end\">\r\n                                        {DeleteButton(deleteTarget)}\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Card.Title>\r\n                </Card.ImgOverlay>\r\n            </Card>\r\n            <br></br>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectCard;","import AccordionBody from 'react-bootstrap/esm/AccordionBody';\r\nimport AccordionHeader from 'react-bootstrap/esm/AccordionHeader';\r\nimport AccordionItem from 'react-bootstrap/esm/AccordionItem';\r\nimport Container from 'react-bootstrap/esm/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Select from 'react-select';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport { EditButton, DeleteButton, AddButton } from '.';\r\nimport React, {useState, useEffect} from 'react';\r\nimport getCookie from '../functions/getCookie';\r\nimport URL from '../constants';\r\n\r\nimport { ProjectIcon, MaterialIcon} from '.';\r\n\r\nconst RecipeAccordion = ({props}) => {\r\n    const csrftoken = getCookie('csrftoken');\r\n    const newType = {type: \"Step\", recipe: props.recipe.id}\r\n    const [pageData, setPageData] = useState([])\r\n    const [loaded, setLoaded] = useState(false)\r\n\r\n    useEffect(() => {\r\n        fetch(URL + 'data/material')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response.json()\r\n            } \r\n        })\r\n        .then(data => {\r\n            setPageData(data)\r\n            setLoaded(true)\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error fetching data\", error)\r\n        })\r\n        .finally(() =>{\r\n            setLoaded(true)\r\n        })\r\n    }, [])\r\n    \r\n    const materialList = pageData.map(element => generateOptGroups(element))\r\n\r\n    function generateOptions(item) {\r\n        return {'value': item.id, 'label': item.name}\r\n    }\r\n    function generateOptGroups(category) {\r\n        let options = category.materials.map(material => generateOptions(material.material))\r\n        let optgroup = {'label': category.category, 'options': options}\r\n        return optgroup\r\n    }\r\n\r\n    //Edit Table Logic\r\n    const getCurrentMaterials = (currentMaterials) => {\r\n        const modifiedMaterials = currentMaterials.map(element => {\r\n            return {'value': element.id, 'label': element.name}})\r\n        return modifiedMaterials\r\n    }\r\n\r\n    const [inEditMode, setInEditMode] = useState({status: false, rowKey: null});\r\n    const [stepValues, setStepValues] = useState({orderValue: null, description: null, materials: []});\r\n    \r\n    const onEdit = ({id, currentValues}) => {\r\n        setInEditMode({status: true, rowKey: id})\r\n        setStepValues(currentValues)\r\n    }\r\n\r\n    const onCancel = () => {\r\n        setInEditMode({status: false, rowKey: null})\r\n        setStepValues({orderValue: null, description: null, materials: []});\r\n    };\r\n\r\n    \r\n    const onSave = ({id, newValues}) => {\r\n        updateInventory ({id, newValues})\r\n    }\r\n\r\n    const handleSelectChange = (selectedOption) => {\r\n        setStepValues({\r\n            ...stepValues,\r\n            materials: selectedOption\r\n        })\r\n    }\r\n\r\n    const updateInventory = ({id, newValues}) => {\r\n        fetch(URL + 'data/step/' + id, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'X-CSRFTOKEN': csrftoken\r\n              },\r\n            body: JSON.stringify(newValues)\r\n        })\r\n        .then(response => {\r\n            if (response.ok) {window.location.reload()} \r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error adding project\", error)\r\n        })\r\n\r\n        onCancel();\r\n\r\n    }\r\n\r\n    if(loaded === false){\r\n        return <p>Loading</p>\r\n    }\r\n\r\n    const editData = {type: \"Recipe\", data: props}\r\n    return (\r\n        <div>\r\n            <AccordionItem  eventKey = {props.recipe.id}> \r\n                <AccordionHeader>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col>\r\n                               {props.recipe.name}\r\n                            </Col>\r\n                            <Col>\r\n                                <div class=\"d-flex justify-content-end\">\r\n                                    {props.projects.map(project => ProjectIcon(project))}\r\n                                </div>\r\n                            </Col>\r\n                            <Col xs=\"auto\">\r\n                                <div class=\"d-flex justify-content-end\">\r\n                                    <EditButton props={editData}/>\r\n                                    {DeleteButton({target: 'recipe', id: props.recipe.id})}\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </AccordionHeader>\r\n                <AccordionBody>\r\n                    <p>{props.recipe.description}</p>\r\n                    <hr></hr>\r\n                    <table class='recipeStepTable'>\r\n                        <tr>\r\n                            <th>Step</th>\r\n                            <th>Description</th>\r\n                            <th>Materials</th>\r\n                        </tr>\r\n                        {props.steps.map(step => (\r\n                            <tr key={step.step.id}>\r\n                                <td>\r\n                                    {\r\n                                        inEditMode.status && inEditMode.rowKey === step.step.id ? (\r\n                                            <input value={stepValues.orderValue}\r\n                                            onChange={(event) => setStepValues({...stepValues, orderValue: event.target.value})}\r\n                                            />\r\n                                        ) : (\r\n                                            step.step.orderValue\r\n                                        )\r\n                                    }\r\n                                </td>\r\n                                <td>\r\n                                    {\r\n                                        inEditMode.status && inEditMode.rowKey === step.step.id ? (\r\n                                            <input value={stepValues.description}\r\n                                               onChange={(event) => setStepValues({...stepValues, description: event.target.value})}\r\n                                            />\r\n                                        ) : (\r\n                                            step.step.description\r\n                                        )\r\n                                    }\r\n                                </td>\r\n                                <td>\r\n                                    <div class=\"d-flex flex-row\">\r\n                                        {\r\n                                            inEditMode.status && inEditMode.rowKey === step.step.id ? (\r\n                                                <Select\r\n                                                    defaultValue={[]}\r\n                                                    isMulti\r\n                                                    value={stepValues.materials}\r\n                                                    onChange = {handleSelectChange}\r\n                                                    options={materialList}\r\n                                                    className=\"basic-multi-select\"\r\n                                                    classNamePrefix=\"select\"\r\n                                            />\r\n                                            ) : (\r\n                                                step.materials.map(material => (MaterialIcon(material)))\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div class=\"d-flex justify-content-end\">\r\n                                    {\r\n                                        inEditMode.status && inEditMode.rowKey === step.step.id ? (\r\n                                            <React.Fragment>\r\n                                                <Button \r\n                                                    variant = \"success\" \r\n                                                    onClick={() => onSave({id: step.step.id, newValues: {\r\n                                                        orderValue: stepValues.orderValue, \r\n                                                        description: stepValues.description, \r\n                                                        materials: stepValues.materials\r\n                                                    }})}\r\n                                                >\r\n                                                    Save\r\n                                                </Button> \r\n\r\n                                                <Button variant = \"danger\" onClick={() => onCancel()} style={{marginLeft: 8}}>\r\n                                                    Cancel\r\n                                                </Button> \r\n                                            </React.Fragment>\r\n                                        ) : (\r\n                                            \r\n                                                <Button id=\"iconButton\"  onClick={\r\n                                                    () => onEdit({id: step.step.id, currentValues: {orderValue: step.step.orderValue, description: step.step.description, materials: getCurrentMaterials(step.materials)}})\r\n                                                }>\r\n                                                    <FontAwesomeIcon icon={faEdit}/>\r\n                                                </Button> \r\n                                            \r\n                                        )\r\n                                    }\r\n                                    {DeleteButton({target: 'step', id: step.step.id})}\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </table>\r\n                    <div  class=\"d-flex justify-content-center\"> \r\n                        <AddButton props={newType}/>\r\n                    </div>\r\n                </AccordionBody>\r\n            </AccordionItem>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecipeAccordion;","import Button from 'react-bootstrap/Button';\r\n\r\nconst ProjectIcon = (props) => {\r\n    return (\r\n        <div>\r\n            <Button href = {\"/Projects/\" + props.id} style={{\r\n                backgroundImage: `url('${props.image}')`,\r\n                backgroundRepeat: 'no-repeat',\r\n                backgroundSize: 'cover',\r\n                border: 'none',\r\n                marginLeft: '5px',\r\n                marginRight: '5px',\r\n            }}>\r\n                {props.name}\r\n            </Button>{' '}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectIcon;","import Button from 'react-bootstrap/Button';\r\n\r\nconst MaterialIcon = (props) => {\r\n    return (\r\n        <div>\r\n            <Button href = {\"/Inventory\"} style={{\r\n                marginLeft: '5px',\r\n                marginRight: '5px',\r\n            }}>\r\n                {props.name}\r\n            </Button>{' '}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MaterialIcon;","import AccordionBody from 'react-bootstrap/esm/AccordionBody';\r\nimport AccordionHeader from 'react-bootstrap/esm/AccordionHeader';\r\nimport AccordionItem from 'react-bootstrap/esm/AccordionItem';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport { ProjectIcon, DeleteButton, EditButton, AddButton } from '.';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport React, {useState} from 'react';\r\nimport getCookie from '../functions/getCookie';\r\nimport URL from '../constants';\r\n\r\nconst InventoryAccordionItem = ({props}) => {\r\n    const newType = {type: \"Item\", material: props.material.id}\r\n    const editData = {type: \"Material\", data: props}\r\n    const csrftoken = getCookie('csrftoken');\r\n    //Edit Table Logic\r\n    const [inEditMode, setInEditMode] = useState({status: false, rowKey: null});\r\n    const [itemValues, setItemValues] = useState({lotNumber: null, expiryDate: null});\r\n    \r\n    const onEdit = ({id, currentValues}) => {\r\n        setInEditMode({status: true, rowKey: id})\r\n        setItemValues(currentValues)\r\n    }\r\n\r\n    const onCancel = () => {\r\n        setInEditMode({status: false, rowKey: null})\r\n        setItemValues({lotNumber: null, expiryDate: null});\r\n    };\r\n\r\n    \r\n    const onSave = ({id, newValues}) => {\r\n        updateInventory ({id, newValues})\r\n    }\r\n\r\n    //Replace with call to API\r\n    const updateInventory = ({id, newValues}) => {\r\n        fetch(URL + 'data/inventory/' + id, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'X-CSRFTOKEN': csrftoken\r\n              },\r\n            body: JSON.stringify(newValues)\r\n        })\r\n        .then(response => {\r\n            if (response.ok) {window.location.reload()} \r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error adding project\", error)\r\n        })\r\n\r\n        onCancel();\r\n\r\n    }\r\n\r\n    return (\r\n        <AccordionItem eventKey = {props.material.id}>\r\n            <AccordionHeader>\r\n                <Container>\r\n                    <Row>\r\n                        <Col xs={2}><Badge bg=\"secondary\">{props.inventory.length}</Badge> {props.material.name}</Col>\r\n                        <Col xs={2}>{props.material.partNumber}</Col>\r\n                        <Col xs={2}>{props.material.company}</Col>\r\n                        <Col xs={1}><a href={props.material.link}>Link</a></Col>\r\n                        {<Col>\r\n                            <div class=\"d-flex flex-row\">\r\n                                {props.projects.map(project => (ProjectIcon(project)))}\r\n                            </div>\r\n                        </Col>}\r\n                        <Col xs={1}>\r\n                            <div class=\"d-flex flex-row\">\r\n                                <EditButton props={editData}/>\r\n                                {DeleteButton({target: 'material', id: props.material.id})}\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </AccordionHeader>\r\n            <AccordionBody>\r\n                <table>\r\n                    <tr>\r\n                        <th>Lot Number</th>\r\n                        <th>Expiry Date (YYYY/MM/DD)</th>\r\n                    </tr>\r\n                    {props.inventory.map(item => (\r\n                        <tr key={item.id}>\r\n                            <td>\r\n                                {\r\n                                    inEditMode.status && inEditMode.rowKey === item.id ? (\r\n                                        <input value={itemValues.lotNumber}\r\n                                        onChange={(event) => setItemValues({...itemValues, lotNumber: event.target.value})}\r\n                                        />\r\n                                    ) : (\r\n                                        item.lotNumber\r\n                                    )\r\n                                }\r\n                            </td>\r\n                            <td>\r\n                                {\r\n                                    inEditMode.status && inEditMode.rowKey === item.id ? (\r\n                                        <input value={itemValues.expiryDate}\r\n                                        onChange={(event) => setItemValues({...itemValues, expiryDate: event.target.value})}\r\n                                        type='date'\r\n                                        />\r\n                                    ) : (\r\n                                        item.expiryDate\r\n                                    )\r\n                                }\r\n                            </td>\r\n                            <td>\r\n                                <div class=\"d-flex flex-row\">\r\n                                    <div class=\"d-flex justify-content-end\">\r\n                                    {\r\n                                        inEditMode.status && inEditMode.rowKey === item.id ? (\r\n                                            <React.Fragment>\r\n                                                <Button variant = \"success\" onClick={() => onSave({id: item.id, newValues: {lotNumber: itemValues.lotNumber, expiryDate: itemValues.expiryDate}})}>\r\n                                                    Save\r\n                                                </Button> \r\n\r\n                                                <Button variant = \"danger\" onClick={() => onCancel()} style={{marginLeft: 8}}>\r\n                                                    Cancel\r\n                                                </Button> \r\n                                            </React.Fragment>\r\n                                        ) : (\r\n                                            \r\n                                                <Button id=\"iconButton\"  onClick={\r\n                                                    () => onEdit({id: item.id, currentValues: {lotNumber: item.lotNumber, expiryDate: item.expiryDate}})\r\n                                                }>\r\n                                                    <FontAwesomeIcon icon={faEdit}/>\r\n                                                </Button> \r\n                                            \r\n                                        )\r\n                                    }\r\n                                    {DeleteButton({target: 'inventory', id: item.id})}\r\n                                    </div>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </table>\r\n                <div  class=\"d-flex justify-content-center\"> \r\n                    <AddButton props={newType} />\r\n                </div>\r\n            </AccordionBody>\r\n        </AccordionItem>\r\n        \r\n    )\r\n}\r\n\r\nexport default InventoryAccordionItem;","import Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport { InventoryAccordionItem, AddButton} from '.';\r\n\r\nconst InventoryCategoryAccordion = (props) => {\r\n    const newType = {type: \"Material\", category: props.category}\r\n    return (\r\n        <div>\r\n            <h1>{props.category}</h1>\r\n            <Container>\r\n                <Row>\r\n                    <Col xs={2}>Name</Col>\r\n                    <Col xs={2}>Part Number</Col>\r\n                    <Col xs={2}>Company</Col>\r\n                    <Col xs={1}>Link</Col>\r\n                    <Col>Projects</Col>\r\n                    <Col xs={1}></Col>\r\n                </Row>\r\n            </Container>\r\n            <Accordion>\r\n                {props.materials.map(material => {\r\n                    return <InventoryAccordionItem props={material}/>\r\n                    })}\r\n            </Accordion>\r\n            <br></br>\r\n            <Container>\r\n                <AddButton props={newType}/>\r\n            </Container>\r\n            <br></br>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InventoryCategoryAccordion;","import Button from 'react-bootstrap/Button';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport { useState } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { EditRecipeForm, EditProjectForm, EditMaterialForm } from '.';\r\n\r\nconst EditButton = ({props}) => {\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    let form\r\n    if (props.type === \"Project\") {\r\n        form = EditProjectForm(props.data)\r\n    } else if (props.type === \"Recipe\"){\r\n        form = EditRecipeForm(props.data)\r\n    } else if (props.type === \"Material\") {\r\n        form = EditMaterialForm(props.data)\r\n    } else {\r\n        form = \"Error, need to build form\"\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Button id=\"iconButton\"  onClick={handleShow}>\r\n                <FontAwesomeIcon icon={faEdit}/>\r\n            </Button>   \r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Edit {props.data.name}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>{form}</Modal.Body>\r\n            </Modal>          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditButton;","import Button from 'react-bootstrap/Button';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport getCookie from '../functions/getCookie';\r\nimport URL from '../constants';\r\n\r\nconst DeleteButton = (props) => {\r\n    const url = URL + 'data/' + props.target + '/' + props.id\r\n    const csrftoken = getCookie('csrftoken');\r\n    const handleSubmit = (event) => {\r\n        fetch(url, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'X-CSRFTOKEN': csrftoken\r\n              },\r\n        })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                window.location.reload()\r\n            } \r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error adding project\", error)\r\n        })\r\n        event.preventDefault()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button id=\"iconButton\" onClick = {handleSubmit}>\r\n                <FontAwesomeIcon icon={faTrash}/>\r\n            </Button>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeleteButton;","import Button from 'react-bootstrap/Button';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { useState } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { NewProjectForm, NewRecipeForm, NewStepForm, NewMaterialForm, NewItemForm, NewCategoryForm} from '.';\r\n\r\nconst AddButton = ({props}) => {\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    \r\n    let form\r\n    let height = \"90px\";\r\n    let width = \"90px\";\r\n    let size = '4x'\r\n\r\n    if (props.type === \"Project\") {\r\n        form = NewProjectForm(props)\r\n    } else if (props.type === \"Recipe\"){\r\n        form = NewRecipeForm(props)\r\n    } else if (props.type === 'Step') {\r\n        height = \"54px\";\r\n        width = \"54px\";\r\n        size = '2x';\r\n        form = NewStepForm(props)\r\n    } else if (props.type === 'Item') {\r\n        height = \"54px\";\r\n        width = \"54px\";\r\n        size = '2x';\r\n        form = NewItemForm(props)\r\n    } else if (props.type === \"Material\") {\r\n        form = NewMaterialForm(props)\r\n    } else if (props.type === \"Category\") {\r\n        form = NewCategoryForm(props)\r\n    } else {\r\n        form = \"Error, need to build form\"\r\n    }\r\n\r\n    return (\r\n        <div class='d-flex justify-content-center'>\r\n            <Button id=\"iconButton\" onClick={handleShow} style={{\r\n                height: height,\r\n                width: width,\r\n            }}>\r\n                <FontAwesomeIcon icon={faPlusCircle} size={size}/>\r\n            </Button>    \r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>New {props.type}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>{form}</Modal.Body>\r\n            </Modal>        \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default AddButton;","import React from 'react';\r\nimport getCookie from '../functions/getCookie';\r\n\r\nvar csrftoken = getCookie('csrftoken');\r\n\r\nconst CSRFToken = () => {\r\n    return (\r\n        <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\r\n    );\r\n};\r\n\r\nexport default CSRFToken;","import Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport CSRFToken from './csrftoken';\r\nimport URL from '../constants';\r\nimport { useState, useEffect } from 'react';\r\nimport Select from 'react-select';\r\nimport getCookie from '../functions/getCookie';\r\n\r\nconst NewProjectForm = (props) => {\r\n    const [pageData, setPageData] = useState([])\r\n    const [loaded, setLoaded] = useState(false)\r\n    const [value, setValue] = useState({\r\n        name: '',\r\n        description: '',\r\n        notes: '',\r\n        image: '',\r\n        status: 'active',\r\n        recipes: []\r\n    })\r\n    const csrftoken = getCookie('csrftoken');\r\n\r\n    useEffect(() => {\r\n        //Replace with API variable\r\n        fetch(URL + 'data/recipe')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response.json()\r\n            } \r\n        })\r\n        .then(data => {\r\n            setPageData(data)\r\n            setLoaded(true)\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error fetching data\", error)\r\n        })\r\n        .finally(() =>{\r\n            setLoaded(true)\r\n        })\r\n    }, [])\r\n\r\n    \r\n    const recipeList = pageData.map(element =>  {\r\n        return {'value': element.recipe.id, 'label': element.recipe.name}\r\n    })\r\n    \r\n    const handleChange = (event) => {\r\n        const target = event.target\r\n        const name = target.name\r\n        let data = target.value\r\n        setValue({\r\n            ...value,\r\n            [name]: data\r\n        })\r\n    }\r\n\r\n    const handleSelectChange = (selectedOption) => {\r\n        setValue({\r\n            ...value,\r\n            recipes: selectedOption\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        fetch(URL + 'data/project', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'X-CSRFTOKEN': csrftoken\r\n              },\r\n            body: JSON.stringify(value)\r\n        })\r\n        .then(response => {\r\n            if (response.ok) {window.location.reload()} \r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error adding project\", error)\r\n        })\r\n\r\n        setValue({\r\n            name: '',\r\n            description: '',\r\n            notes: '',\r\n            image: '',\r\n            status: 'active',\r\n            recipes: ''\r\n        })\r\n\r\n        event.preventDefault()\r\n    }\r\n\r\n    if(loaded === false){\r\n        return <p>Loading</p>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Form onSubmit={handleSubmit}>\r\n                <CSRFToken />\r\n                <Form.Group className=\"mb-3\" controlId=\"name\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"name\" value={value.name} onChange = {handleChange} placeholder=\"Enter Name\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"description\">\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"description\" value={value.description} onChange = {handleChange} placeholder=\"Enter Description\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"notes\">\r\n                    <Form.Label>Notes</Form.Label>\r\n                    <Form.Control as=\"textarea\" name=\"notes\" value={value.notes} onChange = {handleChange} type=\"text\" placeholder=\"Enter Notes\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"image\">\r\n                    <Form.Label>Link to Image</Form.Label>\r\n                    <Form.Control type=\"url\"  name=\"image\" value={value.image} onChange = {handleChange} placeholder=\"Enter URL to Image\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"projects\">\r\n                    <Form.Label>Recipes</Form.Label>\r\n                    <Select\r\n                        defaultValue={[]}\r\n                        isMulti\r\n                        value={value.recipes}\r\n                        onChange = {handleSelectChange}\r\n                        options={recipeList}\r\n                        className=\"basic-multi-select\"\r\n                        classNamePrefix=\"select\"\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewProjectForm;","import Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport CSRFToken from './csrftoken';\r\nimport Select from 'react-select';\r\nimport { useState, useEffect } from 'react';\r\nimport getCookie from '../functions/getCookie';\r\nimport URL from '../constants';\r\n\r\nconst NewRecipeForm = (props) => {\r\n    const [pageData, setPageData] = useState([])\r\n    const [loaded, setLoaded] = useState(false)\r\n    const [value, setValue] = useState({\r\n        name: '',\r\n        description: '',\r\n        projects: []\r\n    })\r\n    const csrftoken = getCookie('csrftoken');\r\n\r\n    useEffect(() => {\r\n        //Replace with API variable\r\n        fetch(URL + 'data/project')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response.json()\r\n            } \r\n        })\r\n        .then(data => {\r\n            setPageData(data)\r\n            setLoaded(true)\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error fetching data\", error)\r\n        })\r\n        .finally(() =>{\r\n            setLoaded(true)\r\n        })\r\n    }, [])\r\n\r\n    \r\n    const projectList = pageData.map(element =>  {\r\n        return {'value': element.id, 'label': element.name}\r\n    })\r\n    \r\n    const handleChange = (event) => {\r\n        const target = event.target\r\n        const name = target.name\r\n        let data = target.value\r\n        setValue({\r\n            ...value,\r\n            [name]: data\r\n        })\r\n    }\r\n\r\n    const handleSelectChange = (selectedOption) => {\r\n        setValue({\r\n            ...value,\r\n            projects: selectedOption\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        fetch(URL + 'data/recipe', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'X-CSRFTOKEN': csrftoken\r\n              },\r\n            body: JSON.stringify(value)\r\n        })\r\n        .then(response => {\r\n            if (response.ok) {window.location.reload()} \r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error adding project\", error)\r\n        })\r\n\r\n        setValue({\r\n            name: '',\r\n            description: '',\r\n            projects: []\r\n        })\r\n\r\n        event.preventDefault()\r\n    }\r\n\r\n    if(loaded === false){\r\n        return <p>Loading</p>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Form onSubmit={handleSubmit}>\r\n                <CSRFToken />\r\n                <Form.Group className=\"mb-3\" controlId=\"name\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"name\" value={value.name} onChange = {handleChange} placeholder=\"Enter Name\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"description\">\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"description\" value={value.description} onChange = {handleChange} placeholder=\"Enter Description\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"projects\">\r\n                    <Form.Label>Projects</Form.Label>\r\n                    <Select\r\n                        defaultValue={[]}\r\n                        isMulti\r\n                        value={value.projects}\r\n                        onChange = {handleSelectChange}\r\n                        options={projectList}\r\n                        className=\"basic-multi-select\"\r\n                        classNamePrefix=\"select\"\r\n                    />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewRecipeForm;","import Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport CSRFToken from './csrftoken';\r\nimport Select from 'react-select';\r\nimport { useState, useEffect } from 'react';\r\nimport getCookie from '../functions/getCookie';\r\nimport URL from '../constants';\r\n\r\nconst EditRecipeForm = (props) => {\r\n    const currentProjects = props.projects.map(element => {\r\n        return {'value': element.id, 'label': element.name}\r\n    })\r\n    const [pageData, setPageData] = useState([])\r\n    const [loaded, setLoaded] = useState(false)\r\n    const [value, setValue] = useState({\r\n        name: props.recipe.name,\r\n        description: props.recipe.description,\r\n        projects: currentProjects\r\n    })\r\n    const csrftoken = getCookie('csrftoken');\r\n\r\n    useEffect(() => {\r\n        //Replace with API variable\r\n        fetch(URL + 'data/project')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response.json()\r\n            } \r\n        })\r\n        .then(data => {\r\n            setPageData(data)\r\n            setLoaded(true)\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error fetching data\", error)\r\n        })\r\n        .finally(() =>{\r\n            setLoaded(true)\r\n        })\r\n    }, [])\r\n\r\n    \r\n    const projectList = pageData.map(element =>  {\r\n        return {'value': element.id, 'label': element.name}\r\n    })\r\n    \r\n    const handleChange = (event) => {\r\n        const target = event.target\r\n        const name = target.name\r\n        let data = target.value\r\n        setValue({\r\n            ...value,\r\n            [name]: data\r\n        })\r\n    }\r\n\r\n    const handleSelectChange = (selectedOption) => {\r\n        setValue({\r\n            ...value,\r\n            projects: selectedOption\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        fetch(URL + 'data/recipe/' + props.recipe.id, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'X-CSRFTOKEN': csrftoken\r\n              },\r\n            body: JSON.stringify(value)\r\n        })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                window.location.reload()\r\n            } \r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error adding project\", error)\r\n        })\r\n\r\n        setValue({\r\n            id: props.recipe.id,\r\n            name: props.recipe.name,\r\n            description: props.recipe.description,\r\n            projects: currentProjects\r\n        })\r\n        \r\n        event.preventDefault()\r\n    }\r\n\r\n    if(loaded === false){\r\n        return <p>Loading</p>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Form onSubmit={handleSubmit}>\r\n                <CSRFToken />\r\n                <Form.Group className=\"mb-3\" controlId=\"name\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"name\" value={value.name} onChange = {handleChange} placeholder=\"Enter Name\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"description\">\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"description\" value={value.description} onChange = {handleChange} placeholder=\"Enter Description\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"projects\">\r\n                    <Form.Label>Projects</Form.Label>\r\n                    <Select\r\n                        defaultValue={[]}\r\n                        isMulti\r\n                        value={value.projects}\r\n                        onChange = {handleSelectChange}\r\n                        options={projectList}\r\n                        className=\"basic-multi-select\"\r\n                        classNamePrefix=\"select\"\r\n                    />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditRecipeForm;","import Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport CSRFToken from './csrftoken';\r\nimport { useState, useEffect } from 'react';\r\nimport getCookie from '../functions/getCookie';\r\nimport Select from 'react-select';\r\nimport URL from '../constants';\r\n\r\nconst EditProjectForm = (props) => {\r\n    const currentRecipes = props.recipes.map(element => {\r\n        return {'value': element.recipe.id, 'label': element.recipe.name}\r\n    })\r\n    const [pageData, setPageData] = useState([])\r\n    const [loaded, setLoaded] = useState(false)\r\n    const [value, setValue] = useState({\r\n        name: props.project.name,\r\n        description: props.project.description,\r\n        notes: props.project.notes, \r\n        image: props.project.image,\r\n        status: 'active',\r\n        recipes: currentRecipes\r\n    })\r\n\r\n    const csrftoken = getCookie('csrftoken');\r\n\r\n    useEffect(() => {\r\n        //Replace with API variable\r\n        fetch(URL + 'data/recipe')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response.json()\r\n            } \r\n        })\r\n        .then(data => {\r\n            setPageData(data)\r\n            setLoaded(true)\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error fetching data\", error)\r\n        })\r\n        .finally(() =>{\r\n            setLoaded(true)\r\n        })\r\n    }, [])\r\n\r\n    const recipeList = pageData.map(element =>  {\r\n        return {'value': element.recipe.id, 'label': element.recipe.name}\r\n    })\r\n\r\n    const handleChange = (event) => {\r\n        const target = event.target\r\n        const name = target.name\r\n        let data = target.value\r\n        setValue({\r\n            ...value,\r\n            [name]: data\r\n        })\r\n    }\r\n\r\n    const handleSelectChange = (selectedOption) => {\r\n        setValue({\r\n            ...value,\r\n            recipes: selectedOption\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        fetch(URL + 'data/project/' + props.project.id, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'X-CSRFTOKEN': csrftoken\r\n              },\r\n            body: JSON.stringify(value)\r\n        })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                window.location.reload()\r\n            } \r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error adding project\", error)\r\n        })\r\n\r\n        setValue({\r\n            name: props.name,\r\n            description: props.description,\r\n            notes: props.notes, \r\n            image: props.image,\r\n            status: 'active',\r\n            recipes: currentRecipes\r\n        })\r\n\r\n        event.preventDefault()\r\n    }\r\n\r\n    if(loaded === false){\r\n        return <p>Loading</p>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CSRFToken />\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Group className=\"mb-3\" controlId=\"name\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"name\" value={value.name} onChange = {handleChange} placeholder=\"Enter Name\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"description\">\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"description\" value={value.description} onChange = {handleChange} placeholder=\"Enter Description\"/>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"notes\">\r\n                    <Form.Label>Notes</Form.Label>\r\n                    <Form.Control as=\"textarea\" type=\"text\" name=\"notes\" value={value.notes} onChange = {handleChange} placeholder=\"Put your thoughts here!\"/>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"image\">\r\n                    <Form.Label>Link to Image</Form.Label>\r\n                    <Form.Control type=\"url\"  name=\"image\" value={value.image} onChange = {handleChange} placeholder=\"Enter URL to Image\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"projects\">\r\n                    <Form.Label>Recipes</Form.Label>\r\n                    <Select\r\n                        defaultValue={[]}\r\n                        isMulti\r\n                        value={value.recipes}\r\n                        onChange = {handleSelectChange}\r\n                        options={recipeList}\r\n                        className=\"basic-multi-select\"\r\n                        classNamePrefix=\"select\"\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditProjectForm;","import Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport CSRFToken from './csrftoken';\r\nimport Select from 'react-select';\r\nimport { useState, useEffect } from 'react';\r\nimport getCookie from '../functions/getCookie';\r\nimport URL from '../constants';\r\n\r\nconst NewStepForm = (props) => {\r\n    const [pageData, setPageData] = useState([])\r\n    const [loaded, setLoaded] = useState(false)\r\n    const [value, setValue] = useState({\r\n        orderValue: '',\r\n        description: '',\r\n        materials: [],\r\n        recipe: props.recipe\r\n    })\r\n    const csrftoken = getCookie('csrftoken');\r\n\r\n    useEffect(() => {\r\n        fetch(URL + 'data/material')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response.json()\r\n            } \r\n        })\r\n        .then(data => {\r\n            setPageData(data)\r\n            setLoaded(true)\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error fetching data\", error)\r\n        })\r\n        .finally(() =>{\r\n            setLoaded(true)\r\n        })\r\n    }, [])\r\n\r\n    \r\n    const materialList = pageData.map(element => generateOptGroups(element))\r\n\r\n    function generateOptions(item) {\r\n        return {'value': item.id, 'label': item.name}\r\n    }\r\n    function generateOptGroups(category) {\r\n        let options = category.materials.map(material => generateOptions(material.material))\r\n        let optgroup = {'label': category.category, 'options': options}\r\n        return optgroup\r\n    }\r\n    \r\n    const handleChange = (event) => {\r\n        const target = event.target\r\n        const name = target.name\r\n        let data = target.value\r\n        setValue({\r\n            ...value,\r\n            [name]: data\r\n        })\r\n    }\r\n\r\n    const handleSelectChange = (selectedOption) => {\r\n        setValue({\r\n            ...value,\r\n            materials: selectedOption\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        fetch(URL + 'data/step', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'X-CSRFTOKEN': csrftoken\r\n              },\r\n            body: JSON.stringify(value)\r\n        })\r\n        .then(response => {\r\n            if (response.ok) {window.location.reload()} \r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error adding project\", error)\r\n        })\r\n\r\n        setValue({\r\n            orderValue: '',\r\n            description: '',\r\n            materials: [],\r\n            recipe: props.recipe\r\n        })\r\n\r\n        event.preventDefault()\r\n    }\r\n\r\n    if(loaded === false){\r\n        return <p>Loading</p>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Form onSubmit={handleSubmit}>\r\n                <CSRFToken />\r\n                <Form.Group className=\"mb-3\" controlId=\"orderValue\">\r\n                    <Form.Label>Step Number</Form.Label>\r\n                    <Form.Control type=\"number\" name=\"orderValue\" value={value.orderValue} onChange = {handleChange} placeholder=\"Enter Step Number\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"description\">\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"description\" value={value.description} onChange = {handleChange} placeholder=\"Enter Description\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"materials\">\r\n                    <Form.Label>Materials</Form.Label>\r\n                    <Select\r\n                        defaultValue={[]}\r\n                        isMulti\r\n                        value={value.materials}\r\n                        onChange = {handleSelectChange}\r\n                        options={materialList}\r\n                        className=\"basic-multi-select\"\r\n                        classNamePrefix=\"select\"\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewStepForm;","import Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport CSRFToken from './csrftoken';\r\nimport { useState } from 'react';\r\nimport getCookie from '../functions/getCookie';\r\nimport URL from '../constants';\r\n\r\nconst EditMaterialForm = (props) => {\r\n    const [value, setValue] = useState({\r\n        name: props.material.name,\r\n        partNumber: props.material.partNumber,\r\n        company: props.material.company,\r\n        link: props.material.link,\r\n        category: props.category\r\n    })\r\n    const csrftoken = getCookie('csrftoken');\r\n\r\n    const handleChange = (event) => {\r\n        const target = event.target\r\n        const name = target.name\r\n        let data = target.value\r\n        setValue({\r\n            ...value,\r\n            [name]: data\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        fetch(URL + 'data/material/' + props.material.id, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'X-CSRFTOKEN': csrftoken\r\n              },\r\n            body: JSON.stringify(value)\r\n        })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                window.location.reload()\r\n            } \r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error adding project\", error)\r\n        })\r\n\r\n        setValue({\r\n            name: props.material.name,\r\n            partNumber: props.material.partNumber,\r\n            company: props.material.company,\r\n            link: props.material.link,\r\n            category: props.category\r\n        })\r\n        event.preventDefault()\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <Form onSubmit={handleSubmit}>\r\n                <CSRFToken />\r\n                <Form.Group className=\"mb-3\" controlId=\"name\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"name\" value={value.name} onChange = {handleChange} placeholder=\"Enter Name\"/>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"partNumber\">\r\n                    <Form.Label>Part Number</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"partNumber\" value={value.partNumber} onChange = {handleChange} placeholder=\"Enter Part Number\"/>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"company\">\r\n                    <Form.Label>Company</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"company\" value={value.company} onChange = {handleChange} placeholder=\"Enter Company\"/>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"link\">\r\n                    <Form.Label>Link</Form.Label>\r\n                    <Form.Control type=\"url\" name=\"link\" value={value.link} onChange = {handleChange} placeholder=\"Enter URL to Item\"/>\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditMaterialForm;","import Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport CSRFToken from './csrftoken';\r\nimport { useState } from 'react';\r\nimport getCookie from '../functions/getCookie';\r\nimport URL from '../constants';\r\n\r\nconst NewMaterialForm = (props) => {\r\n    const [value, setValue] = useState({\r\n        name: '',\r\n        partNumber: '',\r\n        company: '',\r\n        link: '',\r\n        category: props.category\r\n    })\r\n    const csrftoken = getCookie('csrftoken');\r\n\r\n    const handleChange = (event) => {\r\n        const target = event.target\r\n        const name = target.name\r\n        let data = target.value\r\n        setValue({\r\n            ...value,\r\n            [name]: data\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        fetch(URL + 'data/material', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'X-CSRFTOKEN': csrftoken\r\n              },\r\n            body: JSON.stringify(value)\r\n        })\r\n        .then(response => {\r\n            if (response.ok) {window.location.reload()} \r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error adding project\", error)\r\n        })\r\n\r\n        setValue({\r\n            name: '',\r\n            partNumber: '',\r\n            company: '',\r\n            link: '',\r\n            category: props.category\r\n        })\r\n\r\n        event.preventDefault()\r\n    }\r\n\r\n    return (\r\n        <div> \r\n            <Form onSubmit={handleSubmit}>\r\n                <CSRFToken />\r\n                <Form.Group className=\"mb-3\" controlId=\"name\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"name\" value={value.name} onChange = {handleChange} placeholder=\"Enter Name\"/>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"partNumber\">\r\n                    <Form.Label>Part Number</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"partNumber\" value={value.partNumber} onChange = {handleChange} placeholder=\"Enter Part Number\"/>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"company\">\r\n                    <Form.Label>Company</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"company\" value={value.company} onChange = {handleChange} placeholder=\"Enter Company\"/>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"link\">\r\n                    <Form.Label>Link</Form.Label>\r\n                    <Form.Control type=\"url\" name=\"link\" value={value.link} onChange = {handleChange} placeholder=\"Enter URL to Item\"/>\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewMaterialForm;","import Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport CSRFToken from './csrftoken';\r\nimport { useState } from 'react';\r\nimport getCookie from '../functions/getCookie';\r\nimport URL from '../constants';\r\n\r\nconst NewItemForm = (props) => {\r\n    const [value, setValue] = useState({\r\n        lotNumber: '',\r\n        expiryDate: '',\r\n        material: props.material\r\n    })\r\n    const csrftoken = getCookie('csrftoken');\r\n\r\n    const handleChange = (event) => {\r\n        const target = event.target\r\n        const name = target.name\r\n        let data = target.value\r\n        setValue({\r\n            ...value,\r\n            [name]: data\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        fetch(URL + 'data/inventory', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'X-CSRFTOKEN': csrftoken\r\n              },\r\n            body: JSON.stringify(value)\r\n        })\r\n        .then(response => {\r\n            if (response.ok) {window.location.reload()} \r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error adding project\", error)\r\n        })\r\n\r\n        setValue({\r\n            lotNumber: '',\r\n            expiryDate: '',\r\n            material: props.material\r\n        })\r\n\r\n        event.preventDefault()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Form onSubmit={handleSubmit}>\r\n                <CSRFToken />\r\n                <Form.Group className=\"mb-3\" controlId=\"lotNumber\">\r\n                    <Form.Label>Lot Number</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"lotNumber\" value={value.lotNumber} onChange = {handleChange} placeholder=\"Enter Lot Number\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"expiryDate\">\r\n                    <Form.Label>Expiry Date</Form.Label>\r\n                    <Form.Control type=\"date\" name=\"expiryDate\" value={value.expiryDate} onChange = {handleChange} placeholder=\"Enter Expiry Date\" />\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewItemForm;","import Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Card } from 'react-bootstrap';\r\nimport CSRFToken from './csrftoken';\r\nimport { useState } from 'react';\r\nimport getCookie from '../functions/getCookie';\r\nimport URL from '../constants';\r\n\r\nconst LoginForm = (props) => {\r\n    const [value, setValue] = useState({\r\n        username: '',\r\n        password: '',\r\n    })\r\n    const csrftoken = getCookie('csrftoken');\r\n\r\n    const handleChange = (event) => {\r\n        const target = event.target\r\n        const name = target.name\r\n        let data = target.value\r\n        setValue({\r\n            ...value,\r\n            [name]: data\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        fetch(URL + 'account/login/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'X-CSRFTOKEN': csrftoken\r\n              },\r\n            body: JSON.stringify(value)\r\n        })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response.json()\r\n            } \r\n        }).then(data => {\r\n            window.location.href = data[\"url\"]\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error adding project\", error)\r\n        })\r\n\r\n        setValue({\r\n            username: '',\r\n            password: '',\r\n        })\r\n        event.preventDefault()\r\n    }\r\n\r\n    return (\r\n        <div class=\"d-flex flex-column justify-content-center align-items-center\" style={{height: '100vh'}}>\r\n            <Card>\r\n                <Card.Body>\r\n                    <Card.Title>\r\n                        Hobby Project Tracker: Login\r\n                    </Card.Title>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <CSRFToken />\r\n                        <Form.Group className=\"mb-3\" controlId=\"username\">\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"username\" value={value.username} onChange = {handleChange} placeholder=\"Enter Username\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mb-3\" controlId=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" name=\"password\" value={value.password} onChange = {handleChange} placeholder=\"Enter Password\" />\r\n                        </Form.Group>\r\n                        <div>\r\n                            <Button variant=\"primary\" type=\"submit\" style={{marginLeft: '5px', marginRight: '5px'}}>Login</Button>\r\n                            <Button variant=\"primary\" href='/create-account/' style={{marginLeft: '5px', marginRight: '5px'}}>Create Account</Button>\r\n                        </div>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Card } from 'react-bootstrap';\r\nimport CSRFToken from './csrftoken';\r\nimport { useState } from 'react';\r\nimport getCookie from '../functions/getCookie';\r\nimport URL from '../constants';\r\n\r\nconst CreateAccountForm = () => {\r\n    const [value, setValue] = useState({\r\n        email: '',\r\n        username: '',\r\n        password: '',\r\n    })\r\n    const csrftoken = getCookie('csrftoken');\r\n\r\n    const handleChange = (event) => {\r\n        const target = event.target\r\n        const name = target.name\r\n        let data = target.value\r\n        setValue({\r\n            ...value,\r\n            [name]: data\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        fetch(URL + 'account/create-account/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'X-CSRFTOKEN': csrftoken\r\n              },\r\n            body: JSON.stringify(value)\r\n        })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response.json()\r\n            } \r\n        }).then(data => {\r\n            window.location.href = data[\"url\"]\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error adding project\", error)\r\n        })\r\n\r\n        setValue({\r\n            email: '',\r\n            username: '',\r\n            password: '',\r\n        })\r\n        event.preventDefault()\r\n    }\r\n    return (\r\n        <div class=\"d-flex flex-column justify-content-center align-items-center\" style={{height: '100vh'}}>\r\n            <Card>\r\n                <Card.Body>\r\n                    <Card.Title>\r\n                        Hobby Project Tracker: CreateAccount\r\n                    </Card.Title>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <CSRFToken />\r\n                        <Form.Group className=\"mb-3\" controlId=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" name=\"email\" value={value.email} onChange = {handleChange} placeholder=\"Enter Email\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mb-3\" controlId=\"username\">\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"username\" value={value.username} onChange = {handleChange} placeholder=\"Enter Username\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mb-3\" controlId=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" name=\"password\" value={value.password} onChange = {handleChange} placeholder=\"Enter Password\" />\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\" style={{marginLeft: '5px', marginRight: '5px'}}>Create Account</Button>\r\n                    </Form>\r\n                    <br></br>\r\n                    <Button variant=\"primary\" href='/login/' style={{marginLeft: '5px', marginRight: '5px'}}>Already have an account? Login</Button>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateAccountForm;","import Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport CSRFToken from './csrftoken';\r\nimport { useState } from 'react';\r\nimport getCookie from '../functions/getCookie';\r\nimport URL from '../constants';\r\n\r\nconst NewCategoryForm = (props) => {\r\n    const [value, setValue] = useState({\r\n        name: '',\r\n        partNumber: '',\r\n        company: '',\r\n        link: '',\r\n        category: '',\r\n    })\r\n    const csrftoken = getCookie('csrftoken');\r\n\r\n    const handleChange = (event) => {\r\n        const target = event.target\r\n        const name = target.name\r\n        let data = target.value\r\n        setValue({\r\n            ...value,\r\n            [name]: data\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        fetch(URL + 'data/material', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'X-CSRFTOKEN': csrftoken\r\n              },\r\n            body: JSON.stringify(value)\r\n        })\r\n        .then(response => {\r\n            if (response.ok) {window.location.reload()} \r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error adding project\", error)\r\n        })\r\n\r\n        setValue({\r\n            name: '',\r\n            partNumber: '',\r\n            company: '',\r\n            link: '',\r\n            category: '',\r\n        })\r\n\r\n        event.preventDefault()\r\n    }\r\n\r\n    return (\r\n        <div> \r\n            <Form onSubmit={handleSubmit}>\r\n                <CSRFToken />\r\n                <Form.Group className=\"mb-3\" controlId=\"category\">\r\n                    <Form.Label>Category</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"category\" value={value.category} onChange = {handleChange} placeholder=\"Enter Item Category\"/>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"name\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"name\" value={value.name} onChange = {handleChange} placeholder=\"Enter Name\"/>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"partNumber\">\r\n                    <Form.Label>Part Number</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"partNumber\" value={value.partNumber} onChange = {handleChange} placeholder=\"Enter Part Number\"/>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"company\">\r\n                    <Form.Label>Company</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"company\" value={value.company} onChange = {handleChange} placeholder=\"Enter Company\"/>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"link\">\r\n                    <Form.Label>Link</Form.Label>\r\n                    <Form.Control type=\"url\" name=\"link\" value={value.link} onChange = {handleChange} placeholder=\"Enter URL to Item\"/>\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewCategoryForm;","import {Header, ProjectCard, AddButton} from '../components';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { useEffect, useState } from 'react';\r\nimport URL from '../constants';\r\n\r\nconst HomePage = () => {\r\n    const [pageData, setPageData] = useState([])\r\n    const [loaded, setLoaded] = useState(false)\r\n    const newType = {type: \"Project\"} \r\n\r\n    useEffect(() => {\r\n        fetch(URL + 'data/project')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response.json()\r\n            } \r\n        })\r\n        .then(data => {\r\n            setPageData(data)\r\n            setLoaded(true)\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error fetching data\", error)\r\n        })\r\n        .finally(() =>{\r\n            setLoaded(true)\r\n        })\r\n    }, [])\r\n\r\n    if(loaded === false){\r\n        return <p>Loading</p>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <br></br>\r\n            <Container >\r\n                {pageData.map(item => ProjectCard(item))}\r\n            </Container>\r\n            <Container>\r\n                <AddButton props={newType} />\r\n            </Container>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import {Header, RecipeAccordion} from '../components';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport { AddButton } from '../components';\r\nimport { useEffect, useState } from 'react';\r\nimport URL from '../constants';\r\n\r\nconst Recipes = () => {\r\n    const [pageData, setPageData] = useState([])\r\n    const [loaded, setLoaded] = useState(false)\r\n    const newType = {type: \"Recipe\", directAdd: false} \r\n\r\n    useEffect(() => {\r\n        fetch(URL + 'data/recipe')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response.json()\r\n            } \r\n        })\r\n        .then(data => {\r\n            setPageData(data)\r\n            setLoaded(true)\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error fetching data\", error)\r\n        })\r\n        .finally(() =>{\r\n            setLoaded(true)\r\n        })\r\n    }, [])\r\n\r\n    if(loaded === false){\r\n        return <p>Loading</p>\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <Header />\r\n            <br></br>\r\n            <Container>\r\n                <Accordion>\r\n                    {pageData.map(item => {\r\n                        return <RecipeAccordion props={item} />\r\n                        })\r\n                    }\r\n                </Accordion>\r\n            </Container>\r\n            <br></br>\r\n            <Container>\r\n                <AddButton props={newType} />\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recipes;","import Container from 'react-bootstrap/Container';\r\nimport {Header} from '../components';\r\nimport { InventoryCategoryAccordion, AddButton} from '../components';\r\nimport { useEffect, useState } from 'react';\r\nimport URL from '../constants';\r\n\r\nconst Inventory = () => {\r\n    const [pageData, setPageData] = useState([])\r\n    const [loaded, setLoaded] = useState(false)\r\n    const newType = {type: \"Category\"}\r\n    \r\n    useEffect(() => {\r\n        fetch(URL + 'data/material')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response.json()\r\n            } \r\n        })\r\n        .then(data => {\r\n            setPageData(data)\r\n            setLoaded(true)\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error fetching data\", error)\r\n        })\r\n        .finally(() =>{\r\n            setLoaded(true)\r\n        })\r\n    }, [])\r\n\r\n    if(loaded === false){\r\n        return <p>Loading</p>\r\n    }\r\n   \r\n    return (\r\n        <div>\r\n            <Header />\r\n            <Container>\r\n                {pageData.map(category => (InventoryCategoryAccordion(category)))}\r\n            </Container>\r\n            <br></br>\r\n            <Container>\r\n                <AddButton props={newType} />\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Inventory;","import {LoginForm} from '../components';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nconst Login = () => {\r\n    return (\r\n        <div >\r\n            <Container>\r\n                <LoginForm />\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import {Header, RecipeAccordion, AddButton, ProjectCard, EditButton} from '../components';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from \"react-router\";\r\nimport URL from '../constants';\r\n\r\nconst ProjectPage = () => {\r\n    const [pageData, setPageData] = useState([])\r\n    const [editData, setEditData] = useState({\r\n            type: '',\r\n            data: {}\r\n        }\r\n    )\r\n    const [loaded, setLoaded] = useState(false)\r\n    const {id}  = useParams();\r\n\r\n    const newType = {type: \"Recipe\", directAdd: true} \r\n\r\n    useEffect(() => {\r\n        fetch(URL + 'data/project/' + id)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response.json()\r\n            } \r\n        })\r\n        .then(data => {\r\n            setPageData(data[0])\r\n            setEditData({\r\n                type: 'Project',\r\n                data: data[0]\r\n            })\r\n            setLoaded(true)\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error fetching data\", error)\r\n        })\r\n        .finally(() =>{\r\n            setLoaded(true)\r\n        })\r\n    }, [])\r\n\r\n    if(loaded === false){\r\n        return <p>Loading</p>\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <Header />\r\n            <Container>\r\n                {ProjectCard(pageData.project)}\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Row>\r\n                            <Col xs = 'auto'>\r\n                                <Card.Title>{pageData.project.description}</Card.Title>\r\n                            </Col>\r\n                            <Col>\r\n                                <div class=\"d-flex justify-content-end\">\r\n                                    <EditButton props={editData}/>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <hr></hr>\r\n                                <Card.Text>{pageData.project.notes}</Card.Text>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Body>\r\n                </Card>\r\n                <br></br>\r\n                <h4>Recipes</h4>\r\n                <Accordion>\r\n                    {pageData.recipes.map(recipe => {return <RecipeAccordion props={recipe}/>})}\r\n                </Accordion>\r\n                <br></br>\r\n                <Container>\r\n                    <AddButton props={newType}/>\r\n                </Container>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectPage;","import {CreateAccountForm} from '../components';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nconst CreateAccount = () => {\r\n    return (\r\n        <div >\r\n            <Container>\r\n                <CreateAccountForm />\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateAccount;","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport {\n  HomePage,\n  Recipes,\n  Inventory,\n  Login,\n  ProjectPage,\n  CreateAccount\n} from './pages';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n          <link\n            rel=\"stylesheet\"\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/css/bootstrap.min.css\"\n            integrity=\"sha384-F3w7mX95PdgyTmZZMECAngseQB83DfGTowi0iMjiWaeVhAn4FJkqJByhZMI3AhiU\"\n            crossorigin=\"anonymous\"\n          />\n      </header>\n\n      <body>\n        <Router>\n          <Switch> \n            <Route path = \"/recipes\">\n              <Recipes />\n            </Route>\n            <Route path = \"/login\">\n              <Login />\n            </Route>\n            <Route path = \"/inventory\">\n              <Inventory />\n            </Route>\n            <Route path = \"/projects/:id\">\n              <ProjectPage />\n            </Route>\n            <Route path = \"/login\">\n              <Login />\n            </Route>\n            <Route path = \"/create-account\">\n              <CreateAccount />\n            </Route>\n            <Route path = \"/\">\n              <HomePage />\n            </Route>\n          </Switch>\n        </Router>\n      </body>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}